fn main() {
    
    // String - owned, mutable
    let mut greeting = String::new();
    greeting.push_str("Hello");
    greeting.push(' ');
    greeting.push_str("Rust");

    // ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏Å string literal
    let message = String::from("Learning Rust");

    // ‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠ string
    let full_message = format!("{} - {}", greeting, message);
    println!("{}", full_message);

    // ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö UTF-8 - 1 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡πÄ‡∏õ‡πá‡∏ô 3 bytes
    // ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡πÄ‡∏õ‡πá‡∏ô 3 bytes * 10 = 30 bytes
    // Space ‡πÄ‡∏õ‡πá‡∏ô 1 byte
    // Emoji ‡πÄ‡∏õ‡πá‡∏ô 4 bytes
    let thai_text = "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ü¶Ä";
    println!("length in bytes: {}", thai_text.len());
    println!("number of characters: {}", thai_text.chars().count());

    // ‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å string
    let words: Vec<&str> = "Rust is a safe language".split(' ').collect();
    println!("all words: {:?}", words);

}
